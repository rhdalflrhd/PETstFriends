<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.UserDao">
	
		<select id="selectOne" parameterType="String" resultType="java.util.HashMap">
select * from User where user_id = #{user_id}
	</select>
		
<select id="selectPetAll" parameterType="String" resultType="pet">
select * from pet where user_id = #{user_id}
</select>


<insert id="insertPet" parameterType="pet">
insert into Pet values( #{user_id} ,0,#{pet_name},#{pet_species},#{pet_gender},#{pet_age},#{pet_file});
</insert>

	<update id="updateUser" parameterType="java.util.HashMap" >
	update User set user_nickname = #{user_nickname}, user_pass = #{user_pass} , user_email = #{user_email} ,user_phone = #{user_phone}, 
   user_havePet = #{user_havePet} where user_id = #{user_id}

	</update>
	
	<update id="updatePet" parameterType="pet" >
update Pet set pet_name = #{pet_name}, pet_species = #{pet_species},pet_gender = #{pet_gender}, pet_age = #{pet_age},pet_file = #{pet_file} 
where user_id = #{user_id}
	</update>


	<delete id="deleteUser" parameterType="String">
delete from User where user_id = #{user_id}
	
	</delete>

	<delete id="deletePet" parameterType="String">
delete from  Pet  where pet_name = #{pet_name}
	
	</delete>

	<select id="selectUserPet" parameterType="String" resultType="java.util.HashMap">
select * from User u , Pet p where u.user_id = p.user_id and u.user_id = #{user_id};
	</select>

	<select id="selectUserNn" parameterType="String" resultType="User">
		select user_nickname from User where user_nickname = #{user_nickname}
	</select>


	<select id="selectUserPw" parameterType="String" resultType="User">
		select user_pass from User where user_pass = #{user_pass}
	</select>

	<select id="selectUserEmail" parameterType="String" resultType="User">
select user_email from User where user_email = #{user_email}
	</select>

	<select id="selectmyWrite" parameterType="String" resultType="java.util.HashMap">
select FreeBoard_boardno,FreeBoard_title, FreeBoard_userid, FreeBoard_writeDate from FreeBoard where user_id = #{user_id}
UNION ALL
select TipBoard_boardno,TipBoard_title, TipBoard_id, TipBoard_writeDate from TipBoard where TipBoard_id = #{user_id}
UNION ALL
select meeting_boardno, meetingBoard_title , meetingBoarduserid, meetingBoard_writeDate  from  MeetingBoard where meetingBoarduserid = #{user_id} order by writeDate limit #{skip},10
	</select>
	
		<select id="selectmyLikes" parameterType="String" resultType="java.util.HashMap">
select fb.FreeBoard_boardno,fb.FreeBoard_title, fb.userid, fb.FreeBoard_writeDate from FreeBoard fb , FreeLikes fl where fb.userid = fl.FreeLikes_userid and fb.userid = #{user_id}
UNION
select tb.TipBoard_boardno, tb.TipBoard_title,tb.TipBoard_id , tb.TipBoard_writeDate from TipBoard tb , TipLikes tl where tb.TipBoard_id = tl.TipLikes_id and tb.TipBoard_id = #{user_id}
UNION
select mb.meeting_boardno, mb.meetingBoard_title, mb.meetingBoarduserid, mb.meetingBoard_writeDate  from meetingBoard mb , meetingLikes ml where mb.meetingBoarduserid = ml.meetingLikes_userid and mb.meetingBoarduserid= #{user_id}
UNION
select mr.meeting_boardno , mr.meetingReview_title , mr.meetingReview_userid, mr.writeDate from meetingReview mr , meetingLikes mtl where mr.meetingReview_userid = mtl.meetingLikes_userid and mr.meetingReview_userid = #{user_id} limit #{skip},10
	</select>
	
<select id="getWriteCount" parameterType="String" resultType="User">
select count(*) from (
select FreeBoard_boardno from FreeBoard where FreeBoard_userid = #{userid}
UNION ALL
select TipBoard_boardno from TipBoard where TipBoard_userid = #{userid}
UNION ALL
select meeting_boardno from  MeetingBoard where MeetingBoard_userid = #{userid}
) cnt;
	</select>
	
	

	
</mapper>